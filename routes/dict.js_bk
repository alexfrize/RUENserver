var express = require('express');
var router = express.Router();
var mongojs = require('mongojs');
var db = mongojs('mongodb://admin:h5Td_n3Kd$kL@ds153659.mlab.com:53659/ruen_dict');


/*===================================== Начало блока для работы с файлами ===================================== */
/* 
  Если читаем из файла
*/

var fs = require('fs');
var http = require('http');
var readline = require('readline');
var s = require('string');

// vars
var fileData;
var wordsArr = [],
	errorMsg = [],
	answers = [];
// IO interface
var rl = readline.createInterface({
	input: process.stdin,
	output: process.stdout
});


/*===================================== Начало блока для работы с файлами ===================================== */

// Имя файла со словарем
var dictionaryFileName = 'dictionary.txt';
// var dictionaryFileName = 'small_ltest_dict.txt';

/* ------------------ */

function returnJSON(arr) {
	var arrJSON = [];
	
	for (var i=0; i<arr.length; i++) {
		obj= { "engWord" : arr[i][0],
			"rusWord" : arr[i][1]}
		arrJSON.push(obj);
	
	}
	console.log("arr.length ==", arr.length);
	console.log("arrJSON==\r\n",arrJSON);
	return arrJSON;
}

/* ------------------- */

fileData = fs.readFileSync(dictionaryFileName, 'utf-8');

var linesArr = s(fileData).trim().lines();

console.log('--------------\r\n');

for (var x=0; x<linesArr.length; x++) {
	wordsArr.push(linesArr[x].split(' - '));
	console.log(wordsArr[x]);

	// Проверяем на наличие ошибок
	if (wordsArr[x].length != 2) {
		errorMsg.push("Error: There is no ENG or RUS word in line "+ x + ": " + linesArr[x]);
		errorMsg.push(wordsArr[x]);
		errorMsg.push('-------------\r\n');
	}
}



if (errorMsg.length) {
	console.log('--------------\r\n');
	console.log(('FOUND ' + errorMsg.length + ' ERRORS:\r\n').red);
	console.log(errorMsg);
}
else
console.log("OK!\r\n");
console.log('total lines: ' + wordsArr.length);

console.log('--------------\r\n');

/* ================== Обработка запроса HTTP ================== */

console.log("wordsArr==",wordsArr);
//var dataJSON = returnJSON(wordsArr);
console.log("wordsArr==",wordsArr);

router.get('/dict', function(req, res, next) {
	
	console.log("\r\n\r\n\r\n"+Date.now()+"Запрос от клиента...\r\n");
	var dataJSON = returnJSON(wordsArr);
	console.log("\r\ndataJSON==",dataJSON);
	console.log("\r\nwordsArr==",wordsArr);
	res.json(dataJSON);
	
});
/* ========= ... окончание блока для работы с файлами ===================================== */

/* -------------------------------- */





/* раскомментировать для работы с БД */

// router.get('/dict', function(req, res, next) {
// 	db.dictionary.find(function(error, dict) {
// 		if (error) {
// 			res.send(error);
// 		}
// 		res.json(dict);
// 		console.log(dict.toString());
// 	});
// });


router.get('/word/:id', function(req, res, next) {
	db.dictionary.findOne({ _id: mongojs.ObjectId(req.params.id)},function(error, word) {
		if (error) {
			res.send(error);
		}
		res.json(word);
	});
});


module.exports = router;